trigger:
    - master # Adjust the branch name as needed

pool:
    vmImage: ubuntu-22.04 # windows-latest for Windows

variables:
    buildConfiguration: "Release"

steps:
    - task: UseDotNet@2
      inputs:
          packageType: "sdk"
          version: "8.x" # Adjust to your .NET version
          installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
          dotnet restore api.csproj
          dotnet build api.csproj --configuration $(buildConfiguration)
      displayName: "Restore & Build"

    # Install the EF Core CLI tool once
    - script: |
          dotnet tool install --global dotnet-ef
      displayName: "Install dotnet-ef tool"

    - script: |
          dotnet ef migrations script \
            --idempotent \
            --project ./api.csproj \
            --context AppDbContext \
            --output $(Build.ArtifactStagingDirectory)/script.sql
      displayName: "Generate PostgreSQL Script"

    # Use a script or task to apply the SQL script to PostgreSQL, for example:
    - script: |
          echo "Running SQL script on PostgreSQL..."
          export PGPASSWORD=$PG_PASSWORD
          psql -h "$PG_HOST" -p "$PG_PORT" -U "$PG_USER" -d "$PG_DB" -f "$(Build.ArtifactStagingDirectory)/script.sql"
      displayName: "Apply SQL to PostgreSQL"
      env:
          PG_HOST: $(pghost)
          PG_PORT: $(pgport)
          PG_DB: $(pgdb)
          PG_USER: $(pguser)
          PG_PASSWORD: $(pgpassword)

    - script: |
          dotnet publish api.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
      displayName: "Publish"

    # Zip the published artifacts (optional, depending on your needs)
    - task: ArchiveFiles@2
      inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)" # Path to the publish folder
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/api.zip"
          replaceExistingArchive: true
      displayName: "Zip Published Artifacts"

    # Publish the zipped artifact (for storage in Azure DevOps artifacts, for later use)
    - task: PublishBuildArtifacts@1
      inputs:
          pathToPublish: "$(Build.ArtifactStagingDirectory)/api.zip"
          artifactName: "drop"
          publishLocation: "Container"
      displayName: "Publish Zipped Artifacts"
