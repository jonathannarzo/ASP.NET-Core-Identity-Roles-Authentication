trigger:
    - master # Adjust the branch name as needed

pool:
    vmImage: ubuntu-22.04 # windows-latest for Windows

variables:
    buildConfiguration: "Release"

steps:
    - task: UseDotNet@2
      inputs:
          packageType: "sdk"
          version: "8.x" # Adjust to your .NET version
          installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
          dotnet restore api.csproj
          dotnet build api.csproj --configuration $(buildConfiguration)
      displayName: "Restore & Build"

    # Install the EF Core CLI tool once
    - script: |
          dotnet tool install --global dotnet-ef
      displayName: "Install dotnet-ef tool"

    # Create EF Core Migrations (if needed)
    - script: |
          dotnet ef migrations add InitialMigration --project api.csproj --output-dir Migrations
      displayName: "Create EF Core Migrations"

    # Bundle the EF Core Migrations
    - script: |
          dotnet ef migrations bundle --project api.csproj --output efbundle
      displayName: "Create EF Migration Bundle"

    # Run EF migrations
    - script: |
          ./efbundle
      displayName: "Run EF Core Migration"

    - script: |
          dotnet publish api.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
      displayName: "Publish"

    # Zip the published artifacts (optional, depending on your needs)
    - task: ArchiveFiles@2
      inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)" # Path to the publish folder
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/api.zip"
          replaceExistingArchive: true
      displayName: "Zip Published Artifacts"

    # Publish the zipped artifact (for storage in Azure DevOps artifacts, for later use)
    - task: PublishBuildArtifacts@1
      inputs:
          pathToPublish: "$(Build.ArtifactStagingDirectory)/api.zip"
          artifactName: "drop"
          publishLocation: "Container"
      displayName: "Publish Zipped Artifacts"
